#include <stdio.h>
#include <stdlib.h>

typedef struct {
    int score;
    char name[20];
} Student;

void quicksort(Student* students, int first, int end) {
    if (first >= end) return;
    Student temp = students[first];
    int x = first, y = end;
    while (x < y) {
        while (x < y && students[y].score >= temp.score) y--;
        while (x < y && students[x].score <= temp.score) x++;
        if (x < y) {
            Student t = students[x];
            students[x] = students[y];
            students[y] = t;
        }
    }
    students[first] = students[y];
    students[y] = temp;
    quicksort(students, first, y - 1);
    quicksort(students, y + 1, end);
}

int main(void) {
    int n;
    printf("How many students: ");
    scanf("%d", &n);

    Student* students = (Student*)malloc(n * sizeof(Student));
    if (students == NULL) {
        printf("Memory allocation failed\n");
        return 1;
    }

    for (int i = 0; i < n; i++) {
        printf("Enter student %d : (name)(space)(score) ", i + 1);
        scanf("%s %d", students[i].name, &students[i].score);
    }

    quicksort(students, 0, n - 1);

    for (int j = n - 1; j >= 0; j--) {
        printf("%s\n", students[j].name);
    }

    free(students);

    return 0;
}

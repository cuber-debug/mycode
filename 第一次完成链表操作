#include <stdio.h>
#include <stdlib.h>
typedef struct Node {
	int data;//用int整数类型作为数据域
	struct Node* next;//保存下一个结点的指针域
} Node;

Node* initiallist() { //这个函数会初始化头节点
	Node* list = (Node*)malloc(sizeof(Node));
	list->data = 0;
	list->next = NULL;
	return list;//
}//所以我们直接调用函数，头节点就创建完毕
void headinsert(Node*list,int data) {
	Node* node = (Node*)malloc(sizeof(Node));
	node->data = data;
//	printf("%d\n",node->data);
	node->next = list->next;
	list->next = node;
}

void tailinsert(Node*list,int data) {
	Node* node = (Node*)malloc(sizeof(Node));
	node->data = data;
//	printf("%d\n",node->data);
	node->next=NULL;
	while (list->next != NULL) {
		list = list->next;
	}
	list->next = node;
}

void deletenode(Node* list, int data) {
	Node* pre = list;
	Node* current = list->next;
	while (current != NULL) {
		if (current->data == data) {
			pre->next = current->next;
			free(current);
			current = pre->next;
			
		}
		else{
		pre= current;
		current = current->next;
		list ->data++;
		}
	}

}
void printlist(Node* list) {
	printf("List length: %d\n", list->data);
	list = list->next;
	while(list!=NULL) {
		printf("%d\n", list->data);
		list = list->next;
	}

}

int main() {
	Node*list  = initiallist();//头节点创建完毕，我们就要实现头插法
	headinsert(list, 1);
	headinsert(list, 2);
	headinsert(list, 3);
	headinsert(list, 4);
	headinsert(list, 5);
	tailinsert(list, 4);
	tailinsert(list, 5);
	tailinsert(list, 6);
	tailinsert(list, 7);
	tailinsert(list, 8);
	deletenode(list, 5);
	printlist(list);
	return 0;
}
